#==========kafka===========
#\u5236\u5B9Akafka\u4EE3\u7406\u5730\u5740,\u53EF\u4EE5\u591A\u4E2A
#spring.kafka.producer.bootstrap-servers=120.77.36.65:9092
#spring.kafka.consumer.bootstrap-servers=120.77.36.65:9092
spring.kafka.bootstrap-servers=120.77.36.65:9092
#============= provider ==============
spring.kafka.producer.retries=0
# \u6BCF\u6B21\u6279\u91CF\u53D1\u9001\u6D88\u606F\u7684\u6570\u91CF
spring.kafka.producer.batch-size=1000
spring.kafka.producer.buffer-memory=102400

# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#=============== consumer =======================
# \u6307\u5B9A\u9ED8\u8BA4\u6D88\u8D39\u8005group id
spring.kafka.consumer.group-id=find-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
# \u6307\u5B9A\u6D88\u606Fkey\u548C\u6D88\u606F\u4F53\u7684\u7F16\u89E3\u7801\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer









#################consumer\u7684\u914D\u7F6E\u53C2\u6570\uFF08\u5F00\u59CB\uFF09#################
#\u5982\u679C'enable.auto.commit'\u4E3Atrue\uFF0C\u5219\u6D88\u8D39\u8005\u504F\u79FB\u81EA\u52A8\u63D0\u4EA4\u7ED9Kafka\u7684\u9891\u7387\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\uFF0C\u9ED8\u8BA4\u503C\u4E3A5000\u3002
#spring.kafka.consumer.auto-commit-interval;

#\u5F53Kafka\u4E2D\u6CA1\u6709\u521D\u59CB\u504F\u79FB\u91CF\u6216\u8005\u670D\u52A1\u5668\u4E0A\u4E0D\u518D\u5B58\u5728\u5F53\u524D\u504F\u79FB\u91CF\u65F6\u8BE5\u600E\u4E48\u529E\uFF0C\u9ED8\u8BA4\u503C\u4E3Alatest\uFF0C\u8868\u793A\u81EA\u52A8\u5C06\u504F\u79FB\u91CD\u7F6E\u4E3A\u6700\u65B0\u7684\u504F\u79FB\u91CF
#\u53EF\u9009\u7684\u503C\u4E3Alatest, earliest, none
#spring.kafka.consumer.auto-offset-reset=latest;

#\u4EE5\u9017\u53F7\u5206\u9694\u7684\u4E3B\u673A\uFF1A\u7AEF\u53E3\u5BF9\u5217\u8868\uFF0C\u7528\u4E8E\u5EFA\u7ACB\u4E0EKafka\u7FA4\u96C6\u7684\u521D\u59CB\u8FDE\u63A5\u3002
#spring.kafka.consumer.bootstrap-servers;

#ID\u5728\u53D1\u51FA\u8BF7\u6C42\u65F6\u4F20\u9012\u7ED9\u670D\u52A1\u5668;\u7528\u4E8E\u670D\u52A1\u5668\u7AEF\u65E5\u5FD7\u8BB0\u5F55\u3002
#spring.kafka.consumer.client-id;

#\u5982\u679C\u4E3Atrue\uFF0C\u5219\u6D88\u8D39\u8005\u7684\u504F\u79FB\u91CF\u5C06\u5728\u540E\u53F0\u5B9A\u671F\u63D0\u4EA4\uFF0C\u9ED8\u8BA4\u503C\u4E3Atrue
#spring.kafka.consumer.enable-auto-commit=true;

#\u5982\u679C\u6CA1\u6709\u8DB3\u591F\u7684\u6570\u636E\u7ACB\u5373\u6EE1\u8DB3\u201Cfetch.min.bytes\u201D\u7ED9\u51FA\u7684\u8981\u6C42\uFF0C\u670D\u52A1\u5668\u5728\u56DE\u7B54\u83B7\u53D6\u8BF7\u6C42\u4E4B\u524D\u5C06\u963B\u585E\u7684\u6700\u957F\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09
#\u9ED8\u8BA4\u503C\u4E3A500
#spring.kafka.consumer.fetch-max-wait;

#\u670D\u52A1\u5668\u5E94\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\u8FD4\u56DE\u83B7\u53D6\u8BF7\u6C42\u7684\u6700\u5C0F\u6570\u636E\u91CF\uFF0C\u9ED8\u8BA4\u503C\u4E3A1\uFF0C\u5BF9\u5E94\u7684kafka\u7684\u53C2\u6570\u4E3Afetch.min.bytes\u3002
#spring.kafka.consumer.fetch-min-size;

#\u7528\u4E8E\u6807\u8BC6\u6B64\u4F7F\u7528\u8005\u6240\u5C5E\u7684\u4F7F\u7528\u8005\u7EC4\u7684\u552F\u4E00\u5B57\u7B26\u4E32\u3002
#spring.kafka.consumer.group-id;

#\u5FC3\u8DF3\u4E0E\u6D88\u8D39\u8005\u534F\u8C03\u5458\u4E4B\u95F4\u7684\u9884\u671F\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\uFF0C\u9ED8\u8BA4\u503C\u4E3A3000
#spring.kafka.consumer.heartbeat-interval;

#\u5BC6\u94A5\u7684\u53CD\u5E8F\u5217\u5316\u5668\u7C7B\uFF0C\u5B9E\u73B0\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3org.apache.kafka.common.serialization.Deserializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#\u503C\u7684\u53CD\u5E8F\u5217\u5316\u5668\u7C7B\uFF0C\u5B9E\u73B0\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3org.apache.kafka.common.serialization.Deserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#\u4E00\u6B21\u8C03\u7528poll()\u64CD\u4F5C\u65F6\u8FD4\u56DE\u7684\u6700\u5927\u8BB0\u5F55\u6570\uFF0C\u9ED8\u8BA4\u503C\u4E3A500
#spring.kafka.consumer.max-poll-records;
#################consumer\u7684\u914D\u7F6E\u53C2\u6570\uFF08\u7ED3\u675F\uFF09#################
#################producer\u7684\u914D\u7F6E\u53C2\u6570\uFF08\u5F00\u59CB\uFF09#################
#procedure\u8981\u6C42leader\u5728\u8003\u8651\u5B8C\u6210\u8BF7\u6C42\u4E4B\u524D\u6536\u5230\u7684\u786E\u8BA4\u6570\uFF0C\u7528\u4E8E\u63A7\u5236\u53D1\u9001\u8BB0\u5F55\u5728\u670D\u52A1\u7AEF\u7684\u6301\u4E45\u5316\uFF0C\u5176\u503C\u53EF\u4EE5\u4E3A\u5982\u4E0B\uFF1A
#acks = 0 \u5982\u679C\u8BBE\u7F6E\u4E3A\u96F6\uFF0C\u5219\u751F\u4EA7\u8005\u5C06\u4E0D\u4F1A\u7B49\u5F85\u6765\u81EA\u670D\u52A1\u5668\u7684\u4EFB\u4F55\u786E\u8BA4\uFF0C\u8BE5\u8BB0\u5F55\u5C06\u7ACB\u5373\u6DFB\u52A0\u5230\u5957\u63A5\u5B57\u7F13\u51B2\u533A\u5E76\u89C6\u4E3A\u5DF2\u53D1\u9001\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u65E0\u6CD5\u4FDD\u8BC1\u670D\u52A1\u5668\u5DF2\u6536\u5230\u8BB0\u5F55\uFF0C\u5E76\u4E14\u91CD\u8BD5\u914D\u7F6E\u5C06\u4E0D\u4F1A\u751F\u6548\uFF08\u56E0\u4E3A\u5BA2\u6237\u7AEF\u901A\u5E38\u4E0D\u4F1A\u77E5\u9053\u4EFB\u4F55\u6545\u969C\uFF09\uFF0C\u4E3A\u6BCF\u6761\u8BB0\u5F55\u8FD4\u56DE\u7684\u504F\u79FB\u91CF\u59CB\u7EC8\u8BBE\u7F6E\u4E3A-1\u3002
#acks = 1 \u8FD9\u610F\u5473\u7740leader\u4F1A\u5C06\u8BB0\u5F55\u5199\u5165\u5176\u672C\u5730\u65E5\u5FD7\uFF0C\u4F46\u65E0\u9700\u7B49\u5F85\u6240\u6709\u526F\u672C\u670D\u52A1\u5668\u7684\u5B8C\u5168\u786E\u8BA4\u5373\u53EF\u505A\u51FA\u56DE\u5E94\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u5982\u679Cleader\u5728\u786E\u8BA4\u8BB0\u5F55\u540E\u7ACB\u5373\u5931\u8D25\uFF0C\u4F46\u5728\u5C06\u6570\u636E\u590D\u5236\u5230\u6240\u6709\u7684\u526F\u672C\u670D\u52A1\u5668\u4E4B\u524D\uFF0C\u5219\u8BB0\u5F55\u5C06\u4F1A\u4E22\u5931\u3002
#acks = all \u8FD9\u610F\u5473\u7740leader\u5C06\u7B49\u5F85\u5B8C\u6574\u7684\u540C\u6B65\u526F\u672C\u96C6\u4EE5\u786E\u8BA4\u8BB0\u5F55\uFF0C\u8FD9\u4FDD\u8BC1\u4E86\u53EA\u8981\u81F3\u5C11\u4E00\u4E2A\u540C\u6B65\u526F\u672C\u670D\u52A1\u5668\u4ECD\u7136\u5B58\u6D3B\uFF0C\u8BB0\u5F55\u5C31\u4E0D\u4F1A\u4E22\u5931\uFF0C\u8FD9\u662F\u6700\u5F3A\u6709\u529B\u7684\u4FDD\u8BC1\uFF0C\u8FD9\u76F8\u5F53\u4E8Eacks = -1\u7684\u8BBE\u7F6E\u3002
#\u53EF\u4EE5\u8BBE\u7F6E\u7684\u503C\u4E3A\uFF1Aall, -1, 0, 1
#spring.kafka.producer.acks=1

#\u6BCF\u5F53\u591A\u4E2A\u8BB0\u5F55\u88AB\u53D1\u9001\u5230\u540C\u4E00\u5206\u533A\u65F6\uFF0C\u751F\u4EA7\u8005\u5C06\u5C1D\u8BD5\u5C06\u8BB0\u5F55\u4E00\u8D77\u6279\u91CF\u5904\u7406\u4E3A\u66F4\u5C11\u7684\u8BF7\u6C42\uFF0C
#\u8FD9\u6709\u52A9\u4E8E\u63D0\u5347\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u4E0A\u7684\u6027\u80FD\uFF0C\u6B64\u914D\u7F6E\u63A7\u5236\u9ED8\u8BA4\u6279\u91CF\u5927\u5C0F\uFF08\u4EE5\u5B57\u8282\u4E3A\u5355\u4F4D\uFF09\uFF0C\u9ED8\u8BA4\u503C\u4E3A16384
#spring.kafka.producer.batch-size=16384

#\u4EE5\u9017\u53F7\u5206\u9694\u7684\u4E3B\u673A\uFF1A\u7AEF\u53E3\u5BF9\u5217\u8868\uFF0C\u7528\u4E8E\u5EFA\u7ACB\u4E0EKafka\u7FA4\u96C6\u7684\u521D\u59CB\u8FDE\u63A5
#spring.kafka.producer.bootstrap-servers

#\u751F\u4EA7\u8005\u53EF\u7528\u4E8E\u7F13\u51B2\u7B49\u5F85\u53D1\u9001\u5230\u670D\u52A1\u5668\u7684\u8BB0\u5F55\u7684\u5185\u5B58\u603B\u5B57\u8282\u6570\uFF0C\u9ED8\u8BA4\u503C\u4E3A33554432
#spring.kafka.producer.buffer-memory=33554432

#ID\u5728\u53D1\u51FA\u8BF7\u6C42\u65F6\u4F20\u9012\u7ED9\u670D\u52A1\u5668\uFF0C\u7528\u4E8E\u670D\u52A1\u5668\u7AEF\u65E5\u5FD7\u8BB0\u5F55
#spring.kafka.producer.client-id

#\u751F\u4EA7\u8005\u751F\u6210\u7684\u6240\u6709\u6570\u636E\u7684\u538B\u7F29\u7C7B\u578B\uFF0C\u6B64\u914D\u7F6E\u63A5\u53D7\u6807\u51C6\u538B\u7F29\u7F16\u89E3\u7801\u5668\uFF08'gzip'\uFF0C'snappy'\uFF0C'lz4'\uFF09\uFF0C
#\u5B83\u8FD8\u63A5\u53D7'uncompressed'\u4EE5\u53CA'producer'\uFF0C\u5206\u522B\u8868\u793A\u6CA1\u6709\u538B\u7F29\u4EE5\u53CA\u4FDD\u7559\u751F\u4EA7\u8005\u8BBE\u7F6E\u7684\u539F\u59CB\u538B\u7F29\u7F16\u89E3\u7801\u5668\uFF0C
#\u9ED8\u8BA4\u503C\u4E3Aproducer
#spring.kafka.producer.compression-type=producer

#key\u7684Serializer\u7C7B\uFF0C\u5B9E\u73B0\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3org.apache.kafka.common.serialization.Serializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

#\u503C\u7684Serializer\u7C7B\uFF0C\u5B9E\u73B0\u7C7B\u5B9E\u73B0\u4E86\u63A5\u53E3org.apache.kafka.common.serialization.Serializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#\u5982\u679C\u8BE5\u503C\u5927\u4E8E\u96F6\u65F6\uFF0C\u8868\u793A\u542F\u7528\u91CD\u8BD5\u5931\u8D25\u7684\u53D1\u9001\u6B21\u6570
#spring.kafka.producer.retries
#################producer\u7684\u914D\u7F6E\u53C2\u6570\uFF08\u7ED3\u675F\uFF09#################
#################listener\u7684\u914D\u7F6E\u53C2\u6570\uFF08\u7ED3\u675F\uFF09#################
#\u4FA6\u542C\u5668\u7684AckMode,\u53C2\u89C1https://docs.spring.io/spring-kafka/reference/htmlsingle/#committing-offsets
#\u5F53enable.auto.commit\u7684\u503C\u8BBE\u7F6E\u4E3Afalse\u65F6\uFF0C\u8BE5\u503C\u4F1A\u751F\u6548\uFF1B\u4E3Atrue\u65F6\u4E0D\u4F1A\u751F\u6548
#spring.kafka.listener.ack-mode;

#\u5728\u4FA6\u542C\u5668\u5BB9\u5668\u4E2D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570
#spring.kafka.listener.concurrency;

#\u8F6E\u8BE2\u6D88\u8D39\u8005\u65F6\u4F7F\u7528\u7684\u8D85\u65F6\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09
#spring.kafka.listener.poll-timeout;

#\u5F53ackMode\u4E3A\u201CCOUNT\u201D\u6216\u201CCOUNT_TIME\u201D\u65F6\uFF0C\u504F\u79FB\u63D0\u4EA4\u4E4B\u95F4\u7684\u8BB0\u5F55\u6570
#spring.kafka.listener.ack-count;

#\u5F53ackMode\u4E3A\u201CTIME\u201D\u6216\u201CCOUNT_TIME\u201D\u65F6\uFF0C\u504F\u79FB\u63D0\u4EA4\u4E4B\u95F4\u7684\u65F6\u95F4\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09
#spring.kafka.listener.ack-time;
