spring.mail.port=8000
spring.mail.host=smtp.163.com
spring.mail.username=find_mailsender
spring.mail.password=wyyxsqmyqk123
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


# \u81EA\u5B9A\u4E49\u914D\u7F6E
mail.fromMail.addr=find_mailsender@163.com


#Default user name for SMTP.
#mail.smtp.user=

#The SMTP server to connect to
#mail.smtp.host=

#The SMTP server port to connect to, if the connect() method doesn't explicitly specify one. Defaults to
#mail.smtp.port=

#Socket connection timeout value in milliseconds. Default is infinite timeout.
#mail.smtp.connectiontimeout=

#Socket I/O timeout value in milliseconds. Default is infinite timeout.
#mail.smtp.timeout=

#Email address to use for SMTP MAIL command. This sets the envelope return address. Defaults to msg.getFrom() or InternetAddress.getLocalAddress().
#mail.smtp.from=

#Local host name used in the SMTP HELO or EHLO command. Defaults to InetAddress.getLocalHost().getHostName(). Should not normally need to be set if your JDK and your name service are configured properly
#mail.smtp.localhost=

#Local address (host name) to bind to when creating the SMTP socket. Defaults to the address picked by the Socket class. Should not normally need to be set.
#mail.smtp.localaddress=

#Local port number to bind to when creating the SMTP socket. Defaults to the port number picked by the Socket class.
#mail.smtp.localport=

#If false, do not attempt to sign on with the EHLO command. Defaults to true.
#mail.smtp.ehlo=

#If true, attempt to authenticate the user using the AUTH command. Defaults to false.
#mail.smtp.auth=

#If set, lists the authentication mechanisms to consider. Only mechanisms supported by the server and supported by the current implementation will be used. The default is "LOGIN PLAIN DIGEST-MD5 NTLM", which includes all the authentication mechanisms supported by the current implementation.
#mail.smtp.auth.mechanisms=

#If true, prevents use of the AUTH LOGIN command. Default is false.
#mail.smtp.auth.login.disable=

#If true, prevents use of the AUTH PLAIN command. Default is false
#mail.smtp.auth.plain.disable=

#If true, prevents use of the AUTH DIGEST-MD5 command. Default is false
#mail.smtp.auth.digest-md5.disable=

#If true, prevents use of the AUTH NTLM command. Default is false
#mail.smtp.auth.ntlm.disable=

#The NTLM authentication domain.
#mail.smtp.auth.ntlm.domain=

#NTLM protocol-specific flags.
#mail.smtp.auth.ntlm.flags=

#The submitter to use in the AUTH tag in the MAIL FROM command. Typically used by a mail relay to pass along information about the original submitter of the message.
#mail.smtp.submitter=

#The NOTIFY option to the RCPT command. Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).
#mail.smtp.dsn.notify=

#The RET option to the MAIL command. Either FULL or HDRS.
#mail.smtp.dsn.ret=

#If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.
#mail.smtp.sendpartial=

#If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. Defaults to false.
#mail.smtp.sasl.enable=

#A space or comma separated list of SASL mechanism names to try to use.
#mail.smtp.sasl.mechanisms=

#The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.
#mail.smtp.sasl.authorizationid=

#The realm to use with DIGEST-MD5 authentication
#mail.smtp.sasl.realm=

#If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.
#mail.smtp.quitwait=

#If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.
#mail.smtp.reportsuccess=

#If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.
#mail.smtp.socketFactory=

#If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.
#mail.smtp.socketFactory.class=

#If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. Defaults to true.
#mail.smtp.socketFactory.fallback=

#Specifies the port to connect to when using the specified socket factory. If not set, the default port will be used.
#mail.smtp.socketFactory.port=

#If set to true, use SSL to connect and use the SSL port by default. Defaults to false for the "smtp" protocol and true for the "smtps" protocol.
#mail.smtp.ssl.enable=

#If set to true, checks the server identity as specified by RFC 2595. Defaults to false.
#mail.smtp.ssl.checkserveridentity=

#If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.
#If set to "*", all hosts are trusted.
#If set to a whitespace separated list of hosts, those hosts are trusted.
#Otherwise, trust depends on the certificate the server presents.
#mail.smtp.ssl.trust=

#If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create SMTP SSL sockets.
#mail.smtp.ssl.socketFactory=

#If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create SMTP SSL sockets.
#mail.smtp.ssl.socketFactory.class=

#Specifies the port to connect to when using the specified socket factory. If not set, the default port will be used.
#mail.smtp.ssl.socketFactory.port=

#Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.
#mail.smtp.ssl.protocols=

#If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. Defaults to false.
#mail.smtp.starttls.enable=

#If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. Defaults to false.
#mail.smtp.starttls.required=

#Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server
#mail.smtp.socks.host=

#Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080
#mail.smtp.socks.port=

#Extension string to append to the MAIL command
#mail.smtp.mailextension=

#If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. Defaults to false
#mail.smtp.userset=
